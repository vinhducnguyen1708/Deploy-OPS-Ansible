---
- name: Checking if  haproxy certificate exists
  run_once: true
  stat:
    path: "{{ openstack_cacert }}"
  delegate_to: localhost
  register: haproxy_cert_file
  changed_when: false
  when: enable_ssl | bool

# - name: Fail if  haproxy certificate is absent
#   run_once: true
#   fail:
#     msg: " haproxy certificate file is not found. It is configured via 'IP VIP certs'"
#   when:
#     - enable_ssl | bool
#     - not haproxy_cert_file.stat.exists

- name: Checking if IP_VIP are not pingable from any node
  command: "{{ item.command }} -c 3 {{ item.address }}"
  register: ping_output
  changed_when: false
  failed_when: ping_output.rc != 1
  with_items:
    - address: "{{ IP_VIP }}"
      command: "{{ 'ping' if IP_VIP|ipv4 else 'ping6' }}"
  when:
    - enable_haproxy | bool

- name: Checking if IP_VIP is in the same network as MGNT interface on all nodes
  become: true
  command: ip -o addr show dev {{ MGNT_IF }}
  register: ip_addr_output
  changed_when: false
  failed_when: >-
    ( ip_addr_output is failed or
     IP_VIP | ipaddr(ip_addr_output.stdout.split()[3]) is none)
  when:
    - enable_haproxy | bool

- name: Checking free port for HAProxy stats
  wait_for:
    host: "{{ IP_VIP }}"
    port: "8080"
    connect_timeout: 1
    timeout: 1
    state: stopped
  when:
    - enable_haproxy | bool

  