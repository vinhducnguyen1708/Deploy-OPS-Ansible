[DEFAULT]
bind_host = {{ management_ip_address }}
bind_port = {{ neutron_server_port }}
core_plugin = ml2
service_plugins = router,metering,qos{% if enable_neutron_fwaas | bool %},firewall_v2{% endif %}{% if enable_neutron_vpnaas | bool %},vpnaas{% endif %}

advertise_mtu = true
global_physnet_mtu = 1550
dhcp_agents_per_network = 3
allow_overlapping_ips = true
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true
transport_url = rabbit://{%- for item in groups['controller'] %}openstack:{{ rabbitmq_pass }}@{{ hostvars[item]['ansible_' + management_interface]['ipv4']['address'] }}:{{ rabbitmq_port }}{% if not loop.last %},{% endif %}{% endfor %}

auth_strategy = keystone
metadata_proxy_socket = /var/lib/neutron/metadata_proxy
{% if enable_neutron_dvr | bool %}
router_distributed = True
{% endif %}
{% if enable_haproxy | bool %}

{% if enable_neutron_dvr | bool %}
l3_ha = True
l3_ha_net_cidr = 169.254.192.0/18
max_l3_agents_per_router = 3
min_l3_agents_per_router = 2
max_fixed_ips_per_port = 20
{% endif %}
{% endif %}
  
[cors]

[database]
connection = mysql+pymysql://neutron:{{ neutrondb_pass }}@{{ ip_vip_address }}/neutron

[keystone_authtoken]
www_authenticate_uri = {{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}
auth_url = {{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}
memcached_servers = {%- for item in groups['controller'] %}{{ hostvars[item]['ansible_' + management_interface]['ipv4']['address'] }}:{{ memcache_port }}{% if not loop.last %},{% endif %}{% endfor %}

auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
region_name = {{ region_name }}
password = {{ neutron_pass }}
cafile = {{ openstack_cacert }}
insecure = {% if enable_insecure | bool %}True{% else %}False{% endif %}


[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

[oslo_messaging_amqp]

[oslo_messaging_kafka]

[oslo_messaging_notifications]

[oslo_messaging_rabbit]
{% if groups['controller'] | length == 1 %}
rabbit_retry_interval = 1
rabbit_retry_backoff = 2
rabbit_max_retries = 0
amqp_durable_queues = true
rabbit_ha_queues = true
{% endif %}


[oslo_middleware]

[oslo_policy]

[privsep]

[ssl]

[nova]
auth_url = {{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = {{ region_name }}
project_name = service
username = nova
password = {{ nova_pass }}
cafile = {{ openstack_cacert }}
insecure = {% if enable_insecure | bool %}True{% else %}False{% endif %}


[qos]
notification_drivers = message_queue

[agent]
root_helper = sudo neutron-rootwrap /etc/neutron/rootwrap.conf

[quotas]
quota_port = -1
quota_network = -1
quota_subnet = -1
quota_router = -1
quota_floatingip = -1
quota_security_group = -1
quota_security_group_rule = -1

[service_providers]
{% if enable_neutron_fwaas | bool %}
service_provider = FIREWALL_V2:fwaas_db:neutron_fwaas.services.firewall.service_drivers.agents.agents.FirewallAgentDriver:default
{% endif %}

