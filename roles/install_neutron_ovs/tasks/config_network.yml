---
- name: Start OpenvSwitch
  systemd:
    state: started
    enabled: true
    name: openvswitch

- name: Create OVS bridge
  openvswitch_bridge:
    bridge: br-provider
    state: present
    fail_mode: secure
  register: br_provider


# - name: Create an active LACP bond using eth4 and eth5 on bridge br-ex
#   openvswitch_bond:
#     bridge: br-provider
#     port: bond1
#     interfaces: "{{ external_interface }}"
#     lacp: active
#     state: present

# - name: config Interface Bond1
#   template:
#     src: ifcfg-bond1.j2
#     dest: "/etc/sysconfig/network-scripts/ifcfg-bond1"
#   loop:
#      - "{{ external_interface | list }}"
#   notify:
#      - Restart network


- name: Add port for bridge
  openvswitch_port:
    bridge: br-provider
    port: "{{ external_interface }}"
    state: present

- name: config EXTERNAL interface
  template:
    src: ifcfg-external.j2
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{ item }}"
  with_items:
     - "{{ external_interface }}"
  notify:
     - Restart network

# - name: config EXTERNAL interface
#   template:
#     src: ifcfg-external.j2
#     dest: "/etc/sysconfig/network-scripts/ifcfg-{{ external_interface }}"
#   notify:
#      - Restart network

- name: Check Bridge provider config
  stat: 
    path: /etc/sysconfig/network-scripts/ifcfg-br-provider
  register: br_provider

- name: Find External ip 
  set_fact:
    external_ip_address: "{{ hostvars[inventory_hostname]['ansible_br_provider']['ipv4']['address'] }}"
  when:
   - br_provider.stat.exists

- name: Find External netmask
  set_fact:
    external_netmask: "{{  hostvars[inventory_hostname]['ansible_br_provider']['ipv4']['netmask'] }}"
  when:
   - br_provider.stat.exists

- name: Config network bridge Provider
  template:
    src: ifcfg-br-provider.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-br-provider
  notify:
     - Restart network
