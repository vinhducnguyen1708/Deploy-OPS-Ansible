---
- name: Create user Octavia
  os_user:
    name: octavia
    auth: "{{ openstack_auth }}"
    password: "{{ octavia_pass }}"
    domain: default
    ca_cert: "{{ openstack_cacert }}"
    region_name: "{{ region_main_site }}"
  run_once: true
  when: region_name == region_main_site

- name: Add role admin for user Octavia
  os_user_role:
    auth: "{{ openstack_auth }}"
    user: octavia
    role: admin
    project: service
    ca_cert: "{{ openstack_cacert }}"
    region_name: "{{ region_main_site }}"
    state: present
  run_once: true
  when: region_name == region_main_site


- name: Create Octavia service
  os_keystone_service:
    name: octavia
    auth: "{{ openstack_auth }}"
    service_type: load-balancer
    ca_cert: "{{ openstack_cacert }}"
    region_name: "{{ region_main_site }}"
    description: OpenStack Octavia
  run_once: true
  when: region_name == region_main_site

- name: Create the Load-balancer service API endpoints
  os_keystone_endpoint:
     auth: "{{ openstack_auth }}"
     service: octavia 
     endpoint_interface: "{{ item }}"
     url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ octavia_api_port }}"
     region: "{{ region_name }}"
     ca_cert: "{{ openstack_cacert }}"
     region_name: "{{ region_main_site }}"
     state: present
  with_items:
    - public
    - admin
    - internal
  run_once: true
  when: region_name == region_main_site

- name: Create the Load-balancer service API endpoints other site
  os_keystone_endpoint:
     auth: "{{ openstack_auth }}"
     service: octavia 
     endpoint_interface: "{{ item }}"
     url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ octavia_api_port }}"
     region: "{{ region_name }}"
     region_name: "{{ region_main_site }}"
     ca_cert: "{{ openstack_cacert }}"
     state: present
  with_items:
    - public
    - admin
    - internal
  run_once: true
  vars:
     ansible_port: "{{ ssh_port_other_site }}"
  delegate_to: "{{ other_site_ip_list[0] }}"
  when: region_name != region_main_site
  
- name: Create a security group
  os_security_group:
     auth: 
       auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
       username: "admin"
       password: "{{ admin_pass }}"
       project_name: "admin"
       domain_name: "Default"
       user_domain_name: "Default"
     name: lb-mgmt-sec-grp
     state: present
     description: Octavia security group
     region_name: "{{ region_name }}"
     ca_cert: "{{ openstack_cacert }}"
  run_once: yes
  register: lb_sec_group

- name: Set fact security group id
  set_fact:
     id_lb_sec_group: "{{ lb_sec_group.id }}"



- name: add rule ICMP for security group Octavia
  os_security_group_rule:
      auth: 
        auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
        username: "admin"
        password: "{{ admin_pass }}"
        project_name: "admin"
        domain_name: "Default"
        user_domain_name: "Default"
      region_name: "{{ region_name }}"
      security_group: lb-mgmt-sec-grp
      protocol: icmp
      direction: ingress
      remote_ip_prefix: 0.0.0.0/0
      state: present
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes


- name: add rule SSH for security group Octavia
  os_security_group_rule:
       auth: 
         auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
         username: "admin"
         password: "{{ admin_pass }}"
         project_name: "admin"
         domain_name: "Default"
         user_domain_name: "Default"
       region_name: "{{ region_name }}"
       security_group: lb-mgmt-sec-grp
       protocol: tcp
       port_range_min: 22
       port_range_max: 22
       direction: ingress
       remote_ip_prefix: 0.0.0.0/0
       state: present
       ca_cert: "{{ openstack_cacert }}"
  run_once: yes
      
- name: add rule TCP/9443 for security group Octavia
  os_security_group_rule:
      auth: 
         auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
         username: "admin"
         password: "{{ admin_pass }}"
         project_name: "admin"
         domain_name: "Default"
         user_domain_name: "Default"
      region_name: "{{ region_name }}"
      security_group: lb-mgmt-sec-grp
      protocol: tcp
      port_range_min: 9443
      port_range_max: 9443
      direction: ingress
      remote_ip_prefix: 0.0.0.0/0
      state: present
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes


- name: add rule TCP/112 for security group Octavia
  os_security_group_rule:
      auth: 
         auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
         username: "admin"
         password: "{{ admin_pass }}"
         project_name: "admin"
         domain_name: "Default"
         user_domain_name: "Default"
      region_name: "{{ region_name }}"
      security_group: lb-mgmt-sec-grp
      protocol: tcp
      port_range_min: 112
      port_range_max: 112
      direction: ingress
      remote_ip_prefix: 0.0.0.0/0
      state: present
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes

- name: add rule TCP/5555 for security group Octavia
  os_security_group_rule:
      auth: 
        auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
        username: "admin"
        password: "{{ admin_pass }}"
        project_name: "admin"
        domain_name: "Default"
        user_domain_name: "Default"
      region_name: "{{ region_name }}"
      security_group: lb-mgmt-sec-grp
      protocol: tcp
      port_range_min: 5555
      port_range_max: 5555
      direction: ingress
      remote_ip_prefix: 0.0.0.0/0
      state: present
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes

- name: add rule TCP/80 for security group Octavia
  os_security_group_rule:
      auth: 
        auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
        username: "admin"
        password: "{{ admin_pass }}"
        project_name: "admin"
        domain_name: "Default"
        user_domain_name: "Default"
      region_name: "{{ region_name }}"
      security_group: lb-mgmt-sec-grp
      protocol: tcp
      port_range_min: 80
      port_range_max: 80
      direction: ingress
      remote_ip_prefix: 0.0.0.0/0
      state: present
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes


- name: Create provider network
  os_network:
      auth: 
        auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
        username: "admin"
        password: "{{ admin_pass }}"
        project_name: "admin"
        domain_name: "Default"
        user_domain_name: "Default"
      region_name: "{{ region_name }}"
      state: present
      name: "{{ provider_network_name }}"
      shared: yes
      external: true
      project: admin
      provider_network_type: "{{ provider_network_type }}"
      provider_physical_network: "{{ provider_physical_network }}"
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes
  register: provider_network_info
  when:
    - ( id_provider_network is not defined or id_provider_network == "" )

- name: Create subnet for provider network
  os_subnet:
      auth: 
        auth_url: "{{ keystone_protocol }}://{{ ip_vip_address }}:{{ keystone_port }}/v3"
        username: "admin"
        password: "{{ admin_pass }}"
        project_name: "admin"
        domain_name: "Default"
        user_domain_name: "Default"
      region_name: "{{ region_name }}"
      state: present
      network_name: "{{ provider_network_name }}"
      name: "{{ sub_provider_network_name }}"
      cidr: "{{ provider_network_address }}"
      enable_dhcp: yes
      allocation_pool_start: "{{ provider_pool_start }}"
      allocation_pool_end: "{{ provider_pool_end }}"
      dns_nameservers: "{{ provider_dns_nameservers }}"
      ca_cert: "{{ openstack_cacert }}"
  run_once: yes
  when:
    - ( id_provider_network is not defined or id_provider_network == "" )

- name: Set fact provider_network
  set_fact:
     id_provider_network: "{{ provider_network_info.id }}"
  when:
    - ( id_provider_network is not defined or id_provider_network == "" )
